import funkin.modding.module.Module;
import funkin.play.PlayState;
import funkin.Paths;

import flixel.text.FlxTextBorderStyle;
import flixel.text.FlxText;
import flixel.util.FlxSave;
import flixel.FlxG;

import Math;

class CustomScrollSpeed extends Module {
    var save:FlxSave;
    var state:PlayState;

    var speedText:FlxText;

    function new() {
        super("CustomScrollSpeed");
        save = new FlxSave();
        save.bind("BadHUDOptions", "FunkinCrew/BadHUD");
    }

    override function onSongLoaded(event:SongLoadScriptEvent) {
        if (PlayState.instance == null || !save.data.customScrollSpeed) return;

        state = PlayState.instance;

        var scrollSpeed:Float = save.data.scrollSpeedFactor/ 10;
        state.playerStrumline.scrollSpeed = scrollSpeed;
        state.opponentStrumline.scrollSpeed = scrollSpeed;
    }

    override function onPause(event:PauseScriptEvent) {
        if (!save.data.customScrollSpeed) return;
        // Binding with BadHUDOptions for font and size
        var badHUDOptions = new BadHUDOptions();
        var font = badHUDOptions.font;
        var textSize = save.data.hudFontSize;

        // Create Scroll Speed Text Element
        speedText = new FlxText(20, FlxG.height * 0.94, FlxG.width - 40, "", 20);
        speedText.setFormat(Paths.font(font), textSize, 0xFFFFFFFF, "left", FlxTextBorderStyle.OUTLINE, 0xFF000000);
        speedText.scrollFactor.set(0, 0);
        speedText.alignment = "right";
        speedText.cameras = [state.camHUD];
        speedText.text = "Current Scroll Speed: " + Math.round(state.playerStrumline.scrollSpeed * 10) / 10 + "\nSet Scroll Speed: " + save.data.scrollSpeedFactor / 10;
        state.add(speedText);
    }

    override function onSubStateCloseBegin(event:SubStateScriptEvent) { cleanup(); }

    override function onDestroy(event:ScriptEvent) { cleanup(); }

    function cleanup() {
        if (speedText != null) {
            speedText.destroy();
            speedText = null;
        }
    }
}